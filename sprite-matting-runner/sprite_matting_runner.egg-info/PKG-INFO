Metadata-Version: 2.4
Name: sprite-matting-runner
Version: 0.1.0
Summary: GPU-batched sprite sheet matting runner
Author: sprite-matting-runner contributors
License: MIT License
        
        Copyright (c) 2024 sprite-matting-runner contributors
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch
Requires-Dist: torchvision
Requires-Dist: opencv-python-headless
Requires-Dist: numpy
Requires-Dist: tqdm
Requires-Dist: pydantic<3,>=1.10
Requires-Dist: PyYAML
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Dynamic: license-file

# sprite-matting-runner

`sprite-matting-runner` provides an end-to-end sprite-sheet matting pipeline that keeps all crops in GPU memory.  Drop pre-trained weights for FBA Matting or MatteFormer into `checkpoints/`, point the CLI at an input spritesheet and coarse binary mask, and receive stitched alpha mattes in seconds.

## Features

- Sprite-aware crop extraction with adaptive downscaling.
- Trimap generation and feature transforms mirroring the FBA Matting inference path.
- Greedy bucket batching with pixel-budget constraints and padding to CUDA-friendly shapes.
- Automatic AMP execution, optional dual-GPU splitting, and detailed timing summaries.
- Simple YAML/CLI configuration and Docker environment ready for Kaggle-style runners.

See `examples/example_config.yaml` for a quick-start configuration.


> **Note:** The public FBA Matting weights shipped by the community are licensed for non-commercial research. Provide your own checkpoint path if you require different licensing.

## FBA model setup

The runner loads `networks.models` directly from the upstream [FBA_Matting](https://github.com/MarcoForte/FBA_Matting) repository. If that package is not installed in your environment, supply the path to a local clone via either of:

- CLI flag: `--fba-repo /kaggle/working/FBA_Matting`
- Environment variable: `SMR_FBA_REPO=/kaggle/working/FBA_Matting`

The helper will temporarily prepend the provided directory to `PYTHONPATH` so the import succeeds, which avoids manual shell manipulation when running on Kaggle or other notebook hosts.
